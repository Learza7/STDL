test {

	const boolean constantmlkjmlkj = 3;
	
	// int a;

	int i = 1;
	int j = i;
	boolean a = true;
	int z = a + i;
	z = a + i;
	int ee = -j;
	print i+a;
	int c = a * j;
	int d = a - j;
	int e = a / j;
	int b = 1;
	
	int nullValue = null;
		
	int lesseq = a <= 12;
	int zazeazeh = a >= 12;
	int zazeazej = a < 12;
	int zazeazeloj = a > 12;
	int zazekkazeloj = a == 12;
	int zaffzeazeloj = a != 12;


	int kaz = a || b;
	int and = a && b;
	
	int modulo = b % c;
	
	int oppo = !b;
	
	int addr = &a;
	
	int access = *a;
	
	<int, int> tuple = <3, 4>;
	int first = fst tuple;
	int second = snd tuple;
	
	int tab = 9;
	int arrayAccess = tab[0];
	
	/* struct structure {
		int ident;
	} */
	
	int field = b.ident;
	
	// ( a );
	
	// int casting = (Int) b;	
	
	// casting atomique
	
	/** {
		int bloc1 = 3;
		int bloc2 = 4;
	} **/
	
	
	int g = a ? b : c;
	
	// int functionCallParams = func (a, b);
	
	// int functionCall = func();
	
	int arrayAllocation = new int[3];
	
	int pointerAllocation = new Integer();
		
	if (b) {
		a = 3;
	}
	else {
		b = 4;
	}
	
	return a;
		
	

}




